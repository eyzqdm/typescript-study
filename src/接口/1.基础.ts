// /**
//  * interface
//  *      为我们提供一种方式来定义某种结构，ts按照这种结构（规则）来检测数据
//  * 
//  *      写法
//  *          interface 接口名称 {
//  *              // ... 接口规则
//  *          }
//  * 
//  *  接口中定义的规则只有抽象描述，不能有具体的值与实现的
//  * 
//  *  对象抽象 => 类（对象的抽象描述）
//  *  类抽象 => 抽象类（如果一个类中拥有一个没有具体实现的抽象方法，就是抽象类）
//  *  抽象类 => 接口（如果一个抽象类的成员全部是抽象的，那么可以看做接口）
//  */

// interface Options {
//     width: number,
//     height: number
// }

// function fn(opts: Options) {}

// // 类型检测只检测必须的属性是否存在，不会按照顺序进行，无序的
// fn({
//     height: 200,
//     width: 100
// });